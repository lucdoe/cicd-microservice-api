name: Express GKE Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 19

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint Linter
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 19

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Check Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build TypeScript
        run: |
          npm ci
          npm run build

      - name: Generate and Upload Typedoc to GCP Bucket
        run: |
          npm run docs
          gsutil rsync -R docs gs://docs.lucdoe.de

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: lucdoe/express-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK and authenticate
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup Helm
        uses: azure/setup-helm@v1

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials {{ secrets.GCP_CLUSTER }} --region {{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT_ID }}
          cd HelmCharts
          cd express-chart
          helm upgrade express-release . -n express
